<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Chandler Barlow</title>
    <link>/tags/javascript/</link>
    <description>Recent content in javascript on Chandler Barlow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use Javascript Prototypes</title>
      <link>/posts/how-to-use-javascript-prototypes/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/how-to-use-javascript-prototypes/</guid>
      <description>What is the prototype chain? How do we define objects in JavaScript?
Part of being a good developer is modularization. Splitting code apart and reusing functionality is key to writing solid maintainable code. One of the tools developers use to split code apart is Classes. In fact Classes are the main way programmers are taught to segment their code. This practice is so popular that many modern programming languages adhere to what’s called the Object Oriented Paradigm.</description>
    </item>
    
    <item>
      <title>When To Use Redux</title>
      <link>/posts/when-to-use-redux/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/when-to-use-redux/</guid>
      <description>When should you use Redux in a React project?
When using React, a state management library like Redux isn&amp;rsquo;t always necessary. Out of the box React provides a few solutions for managing state. Therefore, not every React project requires Redux. So, when should Redux be used? The main indicator of whether Redux is necessary is how complex the data flow in a project is.
State can be passed down</description>
    </item>
    
  </channel>
</rss>
